<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-23 at 08:19:52.
 * @author rellek
 */
class VocabFileParserTest extends PHPUnit_Framework_TestCase {

    /**
     * @var VocabFileParser
     */
    protected $parser;

    /**
     * @var VocabDbAccess
     */
    protected $dbHandler;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        require_once '../src/VocabFileParser.php';
        $this->parser = new VocabFileParser(true); //true sets test-/debug-mode

        require_once '../src/VocabDbAccess.php';
        $this->dbHandler = new VocabDbAccess(true); // debug-mode: ob
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $totalInsertions = 6;
        $query = 'DELETE FROM vocab ORDER BY vid DESC LIMIT 1';
        for ($i = 0; $i < $totalInsertions; $i++) {
            mysqli_query($this->dbHandler->getDbHandle(), $query);
        }
    }

    /**
     * @covers VocabFileParser::addVocabByFiles
     */
    public function testAddVocabBySingleFile() {
        /**
         * content of parsed file "VocabFileParserTestFile_1.txt":
         * word;noun;Wort
         * bear;noun;Wildtier, Bär, gefährliches Wesen
         */
        $this->parser->addVocabByFiles('VocabFileParserTestFile_1.txt');

        $queryResult = mysqli_fetch_assoc(mysqli_query(
                        $this->dbHandler->getDbHandle(), 'SELECT * FROM vocab WHERE word = "bear"'));
        unset($queryResult['vid']); // don't need to know id
        $queryResult['translations'] = trim(utf8_encode($queryResult['translations']));

        // check if the new entry can be accesed from the db:
        $this->assertEquals($queryResult, array(
            'word' => 'bear', 'vtype' => 'noun', 'translations' => 'Wildtier, Bär, gefährliches Wesen'));

        // check for the other word (make sure every entry of a file works
        $queryResult2 = mysqli_fetch_assoc(mysqli_query(
                        $this->dbHandler->getDbHandle(), 'SELECT * FROM vocab WHERE word = "word"'));
        unset($queryResult2['vid']); // don't need to know id
        $queryResult2['translations'] = trim(utf8_encode($queryResult2['translations']));

        // check if the new entry can be accesed from the db:
        $this->assertEquals($queryResult2, array(
            'word' => 'word', 'vtype' => 'noun', 'translations' => 'Wort'));
    }

    /**
     * @covers VocabFileParser::addVocabByFiles
     */
    public function testAddVocabByFiles() {
        /**
         * content of parsed file "VocabFileParserTestFile_1.txt":
         * word;noun;Wort
         * bear;noun;Wildtier, Bär, gefährliches Wesen
         * 
         * content of parsed file "VocabFileParserTestFile_2.txt":
         * science;noun;Wissenschaft, Naturwissenschaft, Forschung
         * walk;verb;gehen, laufen, wandern, wandeln, spazieren, spazieren gehen   
         */
        $files = array(
            'VocabFileParserTestFile_1.txt',
            'VocabFileParserTestFile_2.txt'
        );
        $this->parser->addVocabByFiles($files);

        $queryResult = mysqli_fetch_assoc(mysqli_query(
                        $this->dbHandler->getDbHandle(), 'SELECT * FROM vocab WHERE word = "bear"'));
        unset($queryResult['vid']); // don't need to know id
        $queryResult['translations'] = trim(utf8_encode($queryResult['translations']));

        // check if the new entry can be accesed from the db:
        $this->assertEquals($queryResult, array(
            'word' => 'bear',
            'vtype' => 'noun',
            'translations' => 'Wildtier, Bär, gefährliches Wesen')
        );

        // check for the other word (make sure every entry of a file works
        $queryResult2 = mysqli_fetch_assoc(mysqli_query(
                        $this->dbHandler->getDbHandle(), 'SELECT * FROM vocab WHERE word = "word"'));
        unset($queryResult2['vid']); // don't need to know id
        $queryResult2['translations'] = trim(utf8_encode($queryResult2['translations']));

        // check if the new entry can be accesed from the db:
        $this->assertEquals($queryResult2, array(
            'word' => 'word',
            'vtype' => 'noun',
            'translations' => 'Wort')
        );

        // check for a word from the 2nd file
        $queryResult3 = mysqli_fetch_assoc(mysqli_query(
                        $this->dbHandler->getDbHandle(), 'SELECT * FROM vocab WHERE word = "walk"'));
        unset($queryResult3['vid']); // don't need to know id
        $queryResult3['translations'] = trim(utf8_encode($queryResult3['translations']));

        // check if the new entry can be accesed from the db:
        $this->assertEquals($queryResult3, array(
            'word' => 'walk',
            'vtype' => 'verb',
            'translations' => 'gehen, laufen, wandern, wandeln, spazieren, spazieren gehen')
        );
    }

}
